Problem 1: Beautiful Array

An array nums of length n is beautiful if:

nums is a permutation of the integers in the range [1, n].
For every 0 <= i < j < n, there is no index k with i < k < j where 2 * nums[k] == nums[i] + nums[j].
Given the integer n, return any beautiful array nums of length n. There will be at least one valid answer for the given n.




CODE-


class Solution {
    public int[] beautifulArray(int n) {
        List<Integer> result = new ArrayList<>();
        result.add(1);
        
        while (result.size() < n) {
            List<Integer> temp = new ArrayList<>();
            
            for (int num : result) {
                if (2 * num - 1 <= n) {
                    temp.add(2 * num - 1); // Odd numbers
                }
            }
            
            for (int num : result) {
                if (2 * num <= n) {
                    temp.add(2 * num); // Even numbers
                }
            }
            
            result = temp;
        }
        
        return result.stream().mapToInt(i -> i).toArray();
    }
}
